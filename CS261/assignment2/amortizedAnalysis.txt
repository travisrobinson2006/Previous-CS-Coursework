Travis Robinson
CS 261
Programming Assignment 2
Part 2

1)O(N)					2) O(N)
Push	Capacity	Cost		Push	Capacity	Cost
1	8		1		1	8		1
2	8		1		2	8		1
3	8		1		3	8		1
4	8		1		4	8		1
5	8		1		5	8		1
6	8		1		6	8		1
7	8		1		7	8		1
8	8		1		8	8		1
9	16		9		9	10		9
10	16		1		10	10		1
11	16		1		11	12		11
12	16		1		12	12		1
13	16		1		13	14		13
14	16		1		14	14		1
15	16		1		15	16		15
16	16		1		16	16		1
17	32		17		17	18		17
18	32		1		18	18		1
19	32		1		19	20		19
20	32		1		20	20		1
21	32		1		21	22		21
22	32		1		22	22		1
23	32		1		23	24		23
24	32		1		24	24		1
25	32		1		25	26		25
26	32		1		26	26		1
27	32		1		27	28		27
28	32		1		28	28		1
29	32		1		29	30		29
30	32		1		30	30		1
31	32		1		31	32		31
32	32		1		32	32		1
		Total	56				Total	260

3) The way to have O(N2) time complexity is to have the program 
alternate pushes and pops. If it starts at capacity 8 and size 4,
 then we push, putting us at capacity 8 and size 4. After that if
 we pop the array is at half capacity (capacity 8, size 4) and so
 it's all moved to a new array. Then we push and we exceed capacity
 and it needs to be moved to a new array again. Just continue doing
 this and for all N operations, N elements need to be moved.

This can be avoided by changing the shrinking by policy to shrink
 the array to size 8 whenever it is emptied. Or by shrinking it 
when the size of the array is at one-quarter of capacity.